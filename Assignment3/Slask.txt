_fName = (value.Length >= 2 && value.Length <= 10) ? value : 0;

=================================================================================================================================

Person person = new Person
{
    person.Age = 45,
    person.FName = "Tina",
    person.LName = "Jonsson",
    person.Height = 182,
    person.Weight = 69.3
};

=================================================================================================================================

//Console.WriteLine(format,$"First name: \t{person.FName}\nLast name:\t{person.LName}\nAge:\t{person.Age}\nHeight:\t{person.Height}\nWeight:\t{person.Weight}");

=================================================================================================================================

Kollade lite snabbt igen på kappa bara på en double och du skulle kunna göra så här:
 
double bmi = 0.39999;
double roundedBmi = Math.Floor(bmi * 100) / 100; // Avrundar inte uppåt
string formattedBmi = roundedBmi.ToString("0.00");
Console.WriteLine(formattedBmi); // Skriver ut "0.39"

=================================================================================================================================

        public bool Person GetPersonIndex()
        { 
            bool listExists;

            if (ListOfPersons.Count == 0)
            {
                Console.WriteLine(">> No persons added yet <<");
                retutn (false, null!);
            }

            if (ListOfPersons.Count >= 1)
            {
                uint index = Utilities.GetUserInputUint("\nChoose index: ");
                int indexToUse = (int)index; // Initialize indexToUse
                if (indexToUse >= 0 && indexToUse < ListOfPersons.Count)
                {
                    
                }
                else
                {
                    Console.WriteLine("Invalid index. Please choose a valid index.");
                }
                return (true, ListOfPersons[indexToUse]);
            }
        }

=================================================================================================================================

        //public void ChangeFirstName(Person activeObject)
//{
//    Person person = activeObject;
//    if (person != null)
//    {
//        string newName = Utilities.GetUserInputString("\nNew firstname: ");
//        Console.WriteLine($"{person.FName} changed to {newName}\n");
//        person.FName = newName;
//        DisplayPersonDetails(person);
//        Console.ReadLine();
//    }
//    else
//    {
//        Console.WriteLine("No person selected. Please choose a valid index.");
//    }
//}



//public void ChangeFirstName()
//{
//    Person person = GetPersonIndex();
//    if (person != null)
//    {
//        string newName = Utilities.GetUserInputString("\nNew firstname: ");
//        Console.WriteLine($"{person.FName} changed to {newName}\n");
//        person.FName = newName;
//        DisplayPersonDetails();
//        Console.ReadLine();
//    }
//    else
//    {
//        Console.WriteLine("No person selected. Please choose a valid index.");
//    }
//}


//public void DeletePerson(Person person)
//{
//    var person = activeObject;
//    DisplayAllPersons();
//    Console.WriteLine("Deleted: " + person!.FName + " " + person.LName);
//    ListOfPersons.Remove(person);
//    DisplayAllPersons();
//}
//public void DeletePerson(int indexToUse)
//{
//    Console.WriteLine("Deleted: " + ListOfPersons[indexToUse].FName + " " + ListOfPersons[indexToUse].LName);
//    ListOfPersons.RemoveAt(indexToUse);
//    DisplayAllPersons();
//}
//public void ChangeLastName(int indexToUse)
//{
//    string name = Utilities.GetUserInputString("\nNew lastname: ");
//    Console.Write(ListOfPersons[indexToUse].LName);
//    Console.WriteLine($" changed to {name}\n");
//    ListOfPersons[indexToUse].LName = name;
//    DisplayPersonDetails();
//    Console.ReadLine();
//}

//public void SetObject()
//{   indexToUse = GetIndexToWorkWith();
//    activeObject = ListOfPersons[indexToUse];
//}

//public Person GetIndexToWorkWith()
//{
//    if (ListOfPersons.Count >= 1)
//    {
//        uint index = Utilities.GetUserInputUint("\nChoose index: ");
//        indexToUse = (int)index;
//        return activeObject = ListOfPersons[indexToUse];
//    }
//    else
//    {
//        Console.WriteLine(">> No persons added yet <<");
//    }
//}